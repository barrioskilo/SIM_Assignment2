setwd("C:/Users/odyky/Desktop/SIM_Assignment2")
knitr::opts_chunk$set(echo = TRUE)
# Clear plots from the R plots view:
if(!is.null(dev.list())) dev.off()
# Clean workspace - No variables at the current workspace
rm(list=ls())
# Setting working directory
setwd("C:/Users/odyky/Desktop/SIM_Assignment2")
# setwd("/Users/anderbarriocampos/Desktop/UPC/SIM/Assignment2")
# Libraries loading
library(ggplot2)
library(GGally)
library(car)
library(lmtest)
library(chemometrics)
library(FactoMineR)
library(corrplot)
library(effects)
library(AER)
library(MASS)
install.packages('egg')
library('egg')
load("gles.RData")
summary(gles)
typeof(gles$vote)
typeof(gles$egoposition_immigration)
typeof(gles$ostwest)
typeof(gles$political_interest)
typeof(gles$income)
typeof(gles$gender)
ll <- which( gles$vote=="NA"); length(ll)
ll <- which( gles$egoposition_immigration=="NA"); length(ll)
ll <- which( gles$ostwest=="NA"); length(ll)
ll <- which( gles$political_interest=="NA"); length(ll)
ll <- which( gles$income=="NA"); length(ll)
ll <- which( gles$gender=="NA"); length(ll)
dupli <- duplicated(gles)
dupli_ind <- which(dupli)
dupli_ind
length(dupli_ind)
gles[dupli_ind,]
unique(gles$vote)
unique(gles$ostwest)
unique(gles$gender)
gles$f.party<-0 #center
gles$f.party[gles$vote=="Gruene" | gles$vote=="LINKE"]<-1 #left
gles$f.party[gles$vote=="AfD"]<-2 #right
gles$f.party<-factor(gles$f.party,labels=c("CENTER","LEFT","RIGHT"))
gles$f.ostwest<-0; gles$f.ostwest[gles$ostwest=="1"]<-1
gles$f.ostwest<-factor(gles$f.ostwest, labels=c("NG","EG")) #northen and east germany
gles$f.gender<-0; gles$f.gender[gles$gender=="0"]<-1
gles$f.gender<-factor(gles$f.gender, labels=c("F","M"))
gles$vote <- NULL #delete vote and work now with f.party
gles$ostwest <- NULL #delete ostwest
gles$gender <- NULL #delete gender
str(gles)
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
boxplot(gles$egoposition_immigration, main = "Boxplot of Variable Egoposition Inmigration")
var_out<-calcQ(gles$egoposition_immigration)
llout_ego<-which((gles$egoposition_immigration<var_out$souti)|(gles$egoposition_immigration>var_out$souts))
length(llout_ego)
boxplot(gles$political_interest, main = "Boxplot of Variable Political Interest")
var_out<-calcQ(gles$political_interest)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_political<-which((gles$political_interest<var_out$souti)|(gles$political_interest>var_out$souts))
length(llout_political)
boxplot(gles$income, main = "Boxplot of Variable Income")
var_out<-calcQ(gles$income)
llout_income<-which((gles$income<var_out$souti)|(gles$income>var_out$souts))
length(llout_income)
df[llout_income,]
boxplot(gles$income, main = "Boxplot of Variable Income")
var_out<-calcQ(gles$income)
llout_income<-which((gles$income<var_out$souti)|(gles$income>var_out$souts))
length(llout_income)
df[llout_income,]
quantiData = gles[gles$egoposition_immigration, gles$political_interest, gles$income ]
quantiData
lapply(quantiData, sd)
summary(gles$egoposition_immigration)
hEgo <- ggplot(gles, aes(x=gles$egoposition_immigration)) +
geom_histogram(color="darkred", fill="pink")
summary(gles$political_interest)
hPoli <-ggplot(gles, aes(x=gles$political_interest)) +
geom_histogram(color="darkblue", fill="lightblue")
summary(gles$income)
hIncome <- ggplot(gles, aes(x=gles$income)) +
geom_histogram(color="darkgreen", fill="lightgreen")
ggarrange(hEgo, hPoli, hIncome,
ncol = 1, nrow = )
boxplot(gles$egoposition_immigration, gles$political_interest, gles$income,
las ="2",names = c("Egoposition Immigration","Political Interest","Income"))
qualiData = gles[gles$f.party, gles$f.ostwest, gles$f.gender ]
par(mfrow=c(1,3))
wings = table(gles$f.party)
pie(wings,  main= "Wing", labels = paste(round(prop.table(wings)*100), "%", sep = ""), col = rainbow(length(wings)))
legend("topright", c("CENTER","LEFT","RIGHT"), cex = 0.8,
fill = rainbow(length(wings)))
ostwest = table(gles$f.ostwest)
pie(ostwest,  main= "Ostwest", labels = paste(round(prop.table(ostwest)*100), "%", sep = ""), col = rainbow(length(ostwest)))
legend("topright", c("NG","EG"), cex = 0.8,
fill = rainbow(length(ostwest)))
gender = table(gles$f.gender)
pie(gender,  main= "Gender", labels = paste(round(prop.table(gender)*100), "%", sep = ""), col = rainbow(length(gender)))
legend("topright", c("F","M"), cex = 0.8,
fill = rainbow(length(gender)))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Clear plots from the R plots view:
if(!is.null(dev.list())) dev.off()
# Clean workspace - No variables at the current workspace
rm(list=ls())
# Setting working directory
setwd("C:/Users/odyky/Desktop/SIM_Assignment2")
# setwd("/Users/anderbarriocampos/Desktop/UPC/SIM/Assignment2")
options(contrasts=c("contr.treatment","contr.treatment")) #Baseline category reparametrization
# Libraries loading
library(ggplot2)
library(GGally)
library(car)
library(lmtest)
library(chemometrics)
library(FactoMineR)
library(corrplot)
library(effects)
library(AER)
library(MASS)
library(egg)
# Chunk 2: read
load("gles.RData")
summary(gles)
# Chunk 3: rawtypes
typeof(gles$vote)
typeof(gles$egoposition_immigration)
typeof(gles$ostwest)
typeof(gles$political_interest)
typeof(gles$income)
typeof(gles$gender)
# Chunk 4: missingData
ll <- which( gles$vote=="NA"); length(ll)
ll <- which( gles$egoposition_immigration=="NA"); length(ll)
ll <- which( gles$ostwest=="NA"); length(ll)
ll <- which( gles$political_interest=="NA"); length(ll)
ll <- which( gles$income=="NA"); length(ll)
ll <- which( gles$gender=="NA"); length(ll)
# Chunk 5: checkingDuplicates
dupli <- duplicated(gles); dupli_ind <- which(dupli); length(dupli_ind)
# Chunk 6: presentDuplicate
gles[dupli_ind,][1:5,]
# Chunk 7: createDuplicateFactor
gles$f.duplicate<-0; gles$f.duplicate[dupli_ind]<-1
gles$f.duplicate<-factor(gles$f.duplicate,labels=c("No.Duplicate","Yes.Duplicate"))
# Chunk 8: uniqueValeusOfVariables
unique(gles$vote); unique(gles$egoposition_immigration); unique(gles$ostwest)
unique(gles$political_interest); unique(gles$income); unique(gles$gender)
# Chunk 9: ostwestToFactor
gles$f.eastGermany<-0; gles$f.eastGermany[gles$ostwest=="1"]<-1
gles$f.eastGermany<-factor(gles$f.eastGermany,
labels=c("No.EastGermany","Yes.EastGermany"))
# Chunk 10: genderToFactor
gles$f.gender<-0; gles$f.gender[gles$gender=="1"]<-1
gles$f.gender<-factor(gles$f.gender, labels=c("M","F"))
# Chunk 11: incomeToOrderedFactor
gles$f.income <- ordered(gles$income, levels=c(0, 1, 2, 3, 4),
labels=c("Low.Sat", "Low_to_Medium.Sat",
"Medium.Sat", "Medium_to_High.Sat",
"High.Sat"))
# Chunk 12: politicalInterestToOrderedFactor
gles$f.political_interest <- ordered(gles$political_interest,
levels=c(0, 1, 2, 3, 4),
labels=c("Low.Inter",
"Low_to_Medium.Inter",
"Medium.Inter",
"Medium_to_High.Inter",
"High.Inter"))
# Chunk 13: egoPositionToOrderedFactor
gles$f.egoposition_immigration <- ordered(gles$egoposition_immigration,
levels=c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
labels=c("0_Very_Open_Level.Imm",
"1_Level.Imm",
"2_Level.Imm",
"3_Level.Imm",
"4_Level.Imm",
"5_Neutral_Level.Imm",
"6_Level.Imm",
"7_Level.Imm",
"8_Level.Imm",
"9_Level.Imm",
"10_Very_Restrictive_Level.Imm"))
# Chunk 14: voteToFactor
gles$f.vote<-as.factor(gles$vote)
# Chunk 15: voteToPoliticalOrientationFactor
gles$f.political_orientation<-0 #center
gles$f.political_orientation[gles$vote=="Gruene" | gles$vote=="LINKE"]<-1 #left
gles$f.political_orientation[gles$vote=="AfD"]<-2 #right
gles$f.political_orientation<-factor(gles$f.political_orientation,
labels=c("Center_Wing","Left_Wing",
"Right_Wing"))
# Chunk 16: removingCHRVariables
gles$vote <- NULL #delete vote
gles$ostwest <- NULL #delete ostwest
gles$gender <- NULL #delete gender
# Chunk 17: glesSumm
summary(gles)
# Chunk 18: quantitativeData
quantiData = gles[c('egoposition_immigration', 'political_interest', 'income')]
#quantiData
# Chunk 19: standardDeviation
lapply(quantiData, sd)
# Chunk 20: summaries
summary(gles$egoposition_immigration)
summary(gles$political_interest)
summary(gles$income)
# Chunk 21: histogramms
hEgo <- ggplot(gles, aes(x=egoposition_immigration)) +
geom_histogram(color="black", fill="#00AFBB")
hPoli <-ggplot(gles, aes(x=political_interest)) +
geom_histogram(color="black", fill="#00AFBB")
hIncome <- ggplot(gles, aes(x=income)) +
geom_histogram(color="black", fill="#00AFBB")
ggarrange(hEgo, hPoli, hIncome,
ncol = 1, nrow = 3)
# Chunk 22: barPlots
gg_east <- ggplot(gles, aes(x = f.eastGermany)) +
geom_bar(fill = "#00AFBB",
color="black") +
labs(x = "People Living in East Germany",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))
gg_gender <- ggplot(gles, aes(x = f.gender)) +
geom_bar(fill = "#00AFBB",
color="black") +
labs(x = "Gender of Individuals",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))
gg_political_or <- ggplot(gles, aes(x = f.political_orientation)) +
geom_bar(fill = "#00AFBB",
color="black") +
labs(x = "Political Orientation (New Vote Variable)",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))
gg_vote <- ggplot(gles, aes(x = f.vote)) +
geom_bar(fill = "#00AFBB",
color="black") +
labs(x = "Votes",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))
ggarrange(gg_east, gg_gender, gg_political_or, gg_vote, ncol = 2, nrow = 2)
# Chunk 23: calcQFunction
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
# Chunk 24: uniOutEgoBoxPlot
boxplot(gles$egoposition_immigration, main = "Boxplot of Variable Egoposition Inmigration")
# Chunk 25: uniOutEgoIQR
var_out<-calcQ(gles$egoposition_immigration)
llout_ego<-which((gles$egoposition_immigration<var_out$souti)|(gles$egoposition_immigration>var_out$souts))
length(llout_ego)
# Chunk 26: uniOutPoliBoxPlot
boxplot(gles$political_interest, main = "Boxplot of Variable Political Interest")
var_out<-calcQ(gles$political_interest)
llout_political<-which((gles$political_interest<var_out$souti)|(gles$political_interest>var_out$souts))
length(llout_political)
# Chunk 27: uniOutIncome
boxplot(gles$income, main = "Boxplot of Variable Income")
var_out<-calcQ(gles$income)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=var_out$mouts,col="red")
llout_income<-which((gles$income<var_out$souti)|(gles$income>var_out$souts))
length(llout_income)
# Chunk 28: incomeOutliers
gles[llout_income,][1:10,]
table(gles$income)
# Chunk 29: incomeOutliersFactor
gles$f.incomeOutliers<-0;
gles$f.incomeOutliers[gles$f.income!="Medium_to_High.Sat"]<-1
gles$f.incomeOutliers<-factor(gles$f.incomeOutliers,
labels=c("No.IncomeOutlier","Yes.IncomeOutlier"))
# Chunk 30: mOutMaha
#res.mout <- Moutlier(gles[,c(1:3)]) # Throws error -- We tried to calculate it by combining as well the numerical variables we deleted in chunq "removingCHRVariables" but the same problem happened.
res.mout <- Moutlier(gles[,c(1:2)], quantile = 0.95)
# Chunk 31: mOutCutOff
res.mout$cutoff
# Chunk 32: mOutPlot
par(mfrow=c(1,1))
plot( res.mout$md, res.mout$rd )
text(res.mout$md, res.mout$rd, labels=rownames(df),adj=1, cex=0.5)
abline( h=res.mout$cutoff, lwd=2, col="red")
abline( v=res.mout$cutoff, lwd=2, col="red")
# Chunk 33: detectMout
llmout <- which((res.mout$md > res.mout$cutoff)
& (res.mout$rd > res.mout$cutoff))
gles$f.mout <- 0
gles$f.mout[llmout] <- 1
gles$f.mout <- factor( gles$f.mout, labels = c("MvOut.No","MvOut.Yes"))
# Chunk 34: summaryMout
summary(gles["f.mout"])
# Chunk 35: corrPlot
M <- cor(gles[,c(1:3)],method="spearman");M #Non Parametric version
corrplot(M, method="circle")
res.cat<-catdes(gles, 10) #11 for new factor
res.cat<-catdes(gles, 10) #11 for new factor
res.cat$quanti
res.cat$category
res.cat<-catdes(gles, 11) #11 for new factor
res.cat$category
