text(res.mout$md, res.mout$rd, labels=rownames(df),adj=1, cex=0.5)
abline( h=res.mout$cutoff, lwd=2, col="red")
abline( v=res.mout$cutoff, lwd=2, col="red")
# Chunk 34: detectMout
llmout <- which((res.mout$md > res.mout$cutoff)
& (res.mout$rd > res.mout$cutoff))
gles$f.mout <- 0
gles$f.mout[llmout] <- 1
gles$f.mout <- factor( gles$f.mout, labels = c("MvOut.No","MvOut.Yes"))
# Chunk 35: summaryMout
summary(gles["f.mout"])
# Chunk 36: createVoteOrd
gles$f.vote_ord <- factor(gles$f.vote, ordered = TRUE, levels = c("LINKE", "Gruene", "SPD", "FDP", "CDU/CSU", "AfD"))
# This transformation takes place here and not in the EDA section of the report, for the reason that it was not so clear, that it was necessary, while reading the assignment statement at first. After f.vote factor was converted to an ordinal one with this command, it was checked that the conversion was completed correctly.
# Chunk 37: splitTrainTestSet
set.seed(150996)
#use 70% of dataset as training set and 30% as test set
sample <- sample(c(TRUE, FALSE), nrow(gles), replace=TRUE, prob=c(0.7,0.3))
train  <- gles[sample,]
test   <- gles[!sample,]
# Chunk 38: baselineNullModel
table(train$f.vote)# AfD is baseline
nm0 <-multinom(f.vote~1, data=train) # Null model
# Chunk 39: mapLevelsWithNumbers
target = 'Parties:'; target
indexes = c(1,2,3,4,5,6); indexes
levels(gles$f.vote)
target = 'Political Wings:'; target
indexes = c(1,2,3); indexes
levels(gles$f.political_orientation)
# Chunk 40: visualInteractionsImm
#egoposition_immigration
par(mfrow=c(1,1))
boxplot(f.vote~egoposition_immigration,data=gles,
main = "Association of f.vote and Egoposition Immigration")
# Chunk 41: visualInteractionsPolInt
#political_interest
par(mfrow=c(1,1))
boxplot(f.vote~political_interest,data=gles,
main = "Association of f.vote and Political Interest")
# Chunk 42: visualInteractionsIncome
#income satisfaction
par(mfrow=c(1,1))
boxplot(f.vote~income,data=gles,
main = "Association of f.vote and Income Satisfaction")
# Chunk 43: visualInteractionsEast
#East Germany
par(mfrow=c(1,1))
boxplot(f.vote~f.eastGermany,data=gles,
main = "Association of f.vote and East Germany")
# Chunk 44: visualInteractionsGender
#Gender
par(mfrow=c(1,1))
boxplot(f.vote~f.gender,data=gles,
main = "Association of f.vote and Gender")
# Chunk 45: visualInteractionsImmW
#egoposition_immigration
par(mfrow=c(1,1))
boxplot(f.political_orientation~egoposition_immigration,data=gles,
main = "Association of Political Wings and Egoposition Immigration")
# Chunk 46: visualInteractionsPolIntW
#political_interest
par(mfrow=c(1,1))
boxplot(f.political_orientation~political_interest,data=gles,
main = "Association of Political Wings and Political Interest")
# Chunk 47: visualInteractionsIncomeW
#income satisfaction
par(mfrow=c(1,1))
boxplot(f.political_orientation~income,data=gles,
main = "Association of Political Wings and Income Satisfaction")
# Chunk 48: visualInteractionsEastW
#East Germany
par(mfrow=c(1,1))
boxplot(f.political_orientation~f.eastGermany,data=gles,
main = "Association of Political Wings and East Germany")
# Chunk 49: visualInteractionsGenderW
#Gender
par(mfrow=c(1,1))
boxplot(f.political_orientation~f.gender,data=gles,
main = "Association of Political Wings and Gender")
# Chunk 50: catdesF.Vote
res.cat<-catdes(gles, 10) #11 for new factor
res.cat$category
# Chunk 51: catdesF.political_orientation
res.cat<-catdes(gles, 11) #11 for new factor
res.cat$category
# Chunk 52: egoposition_immigrationCheck
nm1_imm_con <- multinom(f.vote~ egoposition_immigration, data=train)
nm1_imm_con_sq <- multinom(f.vote~ poly(egoposition_immigration,2), data=train)
nm1_imm_con_cb <- multinom(f.vote~ poly(egoposition_immigration,3), data=train)
nm1_imm_con_qd <- multinom(f.vote~ poly(egoposition_immigration,4), data=train)
nm1_imm_cat <- multinom(f.vote~ f.egoposition_immigration, data=train)
nm0$dev - nm1_imm_con$dev
nm0$dev - nm1_imm_con_sq$dev
nm0$dev - nm1_imm_con_cb$dev
nm0$dev - nm1_imm_con_qd$dev
nm0$dev - nm1_imm_cat$dev
Anova(nm1_imm_con, test="Chisq")
Anova(nm1_imm_con_sq, test="Chisq")
Anova(nm1_imm_con_cb, test="Chisq")
Anova(nm1_imm_con_qd, test="Chisq")
Anova(nm1_imm_cat, test="Chisq")
plot(allEffects(nm1_imm_con),ask=FALSE, main="Effects Imm Continuous")
plot(allEffects(nm1_imm_con_sq),ask=FALSE,main="Effects Imm Continuous Squared")
plot(allEffects(nm1_imm_con_cb),ask=FALSE, main="Effects Imm Continuous Cubed")
plot(allEffects(nm1_imm_con_qd),ask=FALSE, main="Effects Imm Continuous Quadratic")
plot(allEffects(nm1_imm_cat),ask=FALSE, main="Effects Imm Categorical")
AIC(nm0, nm1_imm_con, nm1_imm_con_sq, nm1_imm_con_cb, nm1_imm_con_qd, nm1_imm_cat)
# nm1_imm_con_cb is better
step(nm1_imm_con_cb)
nm1_polint_con <- multinom(f.vote~ political_interest, data=train)
nm1_polint_con_sq <- multinom(f.vote~ poly(political_interest,2), data=train)
nm1_polint_con_cb <- multinom(f.vote~ poly(political_interest,3), data=train)
nm1_polint_con_qd <- multinom(f.vote~ poly(political_interest,4), data=train)
nm1_polint_cat <- multinom(f.vote~ f.political_interest, data=train)
nm0$dev - nm1_polint_con$dev
nm0$dev - nm1_polint_con_sq$dev
nm0$dev - nm1_polint_con_cb$dev
nm0$dev - nm1_polint_con_qd$dev
nm0$dev - nm1_polint_cat$dev
Anova(nm1_polint_con, test="Chisq")
Anova(nm1_polint_con_sq, test="Chisq")
Anova(nm1_polint_con_cb, test="Chisq")
Anova(nm1_polint_con_qd, test="Chisq")
Anova(nm1_polint_cat, test="Chisq")
plot(allEffects(nm1_polint_con),ask=FALSE, main="Effects Pol Int Continuous")
plot(allEffects(nm1_polint_con_sq),ask=FALSE,main="Effects Pol Int Continuous Squared")
plot(allEffects(nm1_polint_con_cb),ask=FALSE, main="Effects Pol Int Continuous Cubed")
plot(allEffects(nm1_polint_con_qd),ask=FALSE, main="Effects Pol Int Continuous Quadratic")
plot(allEffects(nm1_polint_cat),ask=FALSE, main="Effects Pol Int Categorical")
AIC(nm0, nm1_polint_con, nm1_polint_con_sq, nm1_polint_con_cb, nm1_polint_con_qd, nm1_polint_cat)
nm1_inc_con <- multinom(f.vote~ income, data=train)
nm1_inc_con_sq <- multinom(f.vote~ poly(income,2), data=train)
nm1_inc_con_cb <- multinom(f.vote~ poly(income,3), data=train)
nm1_inc_con_qd <- multinom(f.vote~ poly(income,4), data=train)
nm1_inc_cat <- multinom(f.vote~ f.income, data=train)
nm0$dev - nm1_inc_con$dev
nm0$dev - nm1_inc_con_sq$dev
nm0$dev - nm1_inc_con_cb$dev
nm0$dev - nm1_inc_con_qd$dev
nm0$dev - nm1_inc_cat$dev
Anova(nm1_inc_con, test="Chisq")
Anova(nm1_inc_con_sq, test="Chisq")
Anova(nm1_inc_con_cb, test="Chisq")
Anova(nm1_inc_con_qd, test="Chisq")
Anova(nm1_inc_cat, test="Chisq")
plot(allEffects(nm1_inc_con),ask=FALSE, main="Effects Pol Int Continuous")
plot(allEffects(nm1_inc_con_sq),ask=FALSE,main="Effects Pol Int Continuous Squared")
plot(allEffects(nm1_inc_con),ask=FALSE, main="Effects Inc Sat Continuous")
plot(allEffects(nm1_inc_con_sq),ask=FALSE,main="Effects Inc Sat Continuous Squared")
plot(allEffects(nm1_inc_con_cb),ask=FALSE, main="Effects Inc Sat Continuous Cubed")
plot(allEffects(nm1_inc_con_qd),ask=FALSE, main="Effects Inc Sat Continuous Quadratic")
plot(allEffects(nm1_inc_cat),ask=FALSE, main="Effects Pol Int Categorical")
AIC(nm0, nm1_inc_con, nm1_inc_con_sq, nm1_inc_con_cb, nm1_inc_con_qd, nm1_inc_cat)
nm0$dev - nm1_inc_con$dev
nm0$dev - nm1_inc_con_sq$dev
nm0$dev - nm1_inc_con_cb$dev
nm0$dev - nm1_inc_con_qd$dev
nm0$dev - nm1_inc_cat$dev
anova(nm1_inc_con,nm1_inc_con_sq,test="Chisq")
anova(nm1_inc_con_sq, nm1_inc_con_cb, test="Chisq")
anova(nm1_inc_con_cb, nm1_inc_con_qd, test="Chisq")
anova(nm1_inc_con_qd, nm1_inc_cat, test="Chisq")
anova(nm1_polint_con, nm1_polint_con_sq, test="Chisq")
anova(nm1_polint_con_sq, nm1_polint_con_cb, test="Chisq")
anova(nm1_polint_con_cb, nm1_polint_con_qd, test="Chisq")
anova(nm1_polint_con, nm1_polint_con_sq, test="Chisq")
AIC(nm0, nm1_polint_con, nm1_polint_con_sq, nm1_polint_con_cb, nm1_polint_con_qd, nm1_polint_cat)
anova(nm1_inc_con, nm1_inc_con_sq, test="Chisq")
anova(nm1_inc_con_sq, nm1_inc_con_cb, test="Chisq")
anova(nm1_inc_con_cb, nm1_inc_con_qd, test="Chisq")
Anova(nm1_inc_cat, test="Chisq")
Anova(nm1_inc_con, test="Chisq")
Anova(nm1_inc_con_sq, test="Chisq")
Anova(nm1_inc_con, test="Chisq")
# nm1_polint_con_sq is better, but in general politican interest does not provide predictability power, null model is better in most of the cases. Political interest will be used in squared form.
step(nm1_polint_con_sq)
# nm1_inc_con is better, income satisfaction will be used as numerical in first order
step(nm1_inc_con)
plot(allEffects(nm1_inc_cat),ask=FALSE, main="Effects Inc Sat Categorical")
plot(allEffects(nm1_polint_cat),ask=FALSE, main="Effects Pol Int Categorical")
plot(allEffects(nm1_inc_cat),ask=FALSE, main="Effects Inc Sat Categorical")
plot(allEffects(nm1_polint_cat),ask=FALSE, main="Effects Pol Int Categorical")
plot(allEffects(nm1_imm_cat),ask=FALSE, main="Effects Imm Categorical")
gles$f.Imm<-0
ll<-which(gles$egoposition_immigration %in% c(1,2,3))
gles$f.Imm[ll]<-1
ll<-which(gles$egoposition_immigration %in% c(4,5,6))
gles$f.Imm[ll]<-2
ll<-which(gles$egoposition_immigration %in% c(7,8,9))
gles$f.Imm[ll]<-3
ll<-which(gles$egoposition_immigration %in% c(10))
gles$f.Imm[ll]<-4
gles$f.Imm <- factor(gles$f.Imm, ordered = TRUE, levels = c("low", "low_medium", "medium", "medium_high", "high"))
gles$f.PolInt<-0
ll<-which(gles$political_interest %in% c(1,2,3))
gles$f.PolInt[ll]<-1
ll<-which(gles$political_interest %in% c(4))
gles$f.PolInt[ll]<-2
gles$f.PolInt <- factor(gles$f.PolInt, ordered = TRUE, levels = c("low", "medium", "high"))
gles$f.IncSat<-0
ll<-which(gles$income %in% c(1))
gles$f.IncSat[ll]<-1
ll<-which(gles$income %in% c(2,3))
gles$f.IncSat[ll]<-2
ll<-which(gles$income %in% c(4))
gles$f.IncSat[ll]<-3
gles$f.IncSat <- factor(gles$f.IncSat, ordered = TRUE, levels = c("low", "low_to_medium","medium", "high"))
set.seed(150996)
#use 70% of dataset as training set and 30% as test set
sample <- sample(c(TRUE, FALSE), nrow(gles), replace=TRUE, prob=c(0.7,0.3))
train  <- gles[sample,]
test   <- gles[!sample,]
nm1_imm_con <- multinom(f.vote~ egoposition_immigration, data=train)
nm1_imm_con_sq <- multinom(f.vote~ poly(egoposition_immigration,2), data=train)
nm1_imm_con_cb <- multinom(f.vote~ poly(egoposition_immigration,3), data=train)
nm1_imm_con_qd <- multinom(f.vote~ poly(egoposition_immigration,4), data=train)
nm1_imm_cat <- multinom(f.vote~ f.egoposition_immigration, data=train)
nm1_imm_cat_new <- multinom(f.vote~ f.Imm, data=train)
View(gles)
View(gles)
gles$f.Imm<-0
ll<-which(gles$egoposition_immigration %in% c(1,2,3))
gles$f.Imm[ll]<-1
ll<-which(gles$egoposition_immigration %in% c(4,5,6))
gles$f.Imm[ll]<-2
ll<-which(gles$egoposition_immigration %in% c(7,8,9))
gles$f.Imm[ll]<-3
ll<-which(gles$egoposition_immigration %in% c(10))
gles$f.Imm[ll]<-4
gles$f.Imm
unique(gles$f.Imm)
gles$f.Imm <- factor(gles$f.Imm, ordered = TRUE, levels = c("low", "low_medium", "medium", "medium_high", "high"))
gles$f.Imm <- factor(gles$f.Imm,labels=c("low", "low_medium", "medium", "medium_high", "high"))
gles$f.Imm<-0
ll<-which(gles$egoposition_immigration %in% c(1,2,3))
gles$f.Imm[ll]<-1
ll<-which(gles$egoposition_immigration %in% c(4,5,6))
gles$f.Imm[ll]<-2
ll<-which(gles$egoposition_immigration %in% c(7,8,9))
gles$f.Imm[ll]<-3
ll<-which(gles$egoposition_immigration %in% c(10))
gles$f.Imm[ll]<-4
gles$f.Imm <- factor(gles$f.Imm,labels=c("low", "low_medium", "medium", "medium_high", "high"))
gles$f.Imm <- factor(gles$f.Imm, ordered = TRUE, levels = c("low", "low_medium", "medium", "medium_high", "high"))
gles$f.PolInt<-0
ll<-which(gles$political_interest %in% c(1,2,3))
gles$f.PolInt[ll]<-1
ll<-which(gles$political_interest %in% c(4))
gles$f.PolInt[ll]<-2
gles$f.PolInt <- factor(gles$f.PolInt,labels=c("low", "medium", "high"))
gles$f.PolInt <- factor(gles$f.PolInt, ordered = TRUE, levels = c("low", "medium", "high"))
gles$f.IncSat<-0
ll<-which(gles$income %in% c(1))
gles$f.IncSat[ll]<-1
ll<-which(gles$income %in% c(2,3))
gles$f.IncSat[ll]<-2
ll<-which(gles$income %in% c(4))
gles$f.IncSat[ll]<-3
gles$f.IncSat <- factor(gles$f.IncSat,labels=c("low", "low_to_medium","medium", "high"))
gles$f.IncSat <- factor(gles$f.IncSat, ordered = TRUE, levels = c("low", "low_to_medium","medium", "high"))
set.seed(150996)
#use 70% of dataset as training set and 30% as test set
sample <- sample(c(TRUE, FALSE), nrow(gles), replace=TRUE, prob=c(0.7,0.3))
train  <- gles[sample,]
test   <- gles[!sample,]
nm1_imm_con <- multinom(f.vote~ egoposition_immigration, data=train)
nm1_imm_con_sq <- multinom(f.vote~ poly(egoposition_immigration,2), data=train)
nm1_imm_con_cb <- multinom(f.vote~ poly(egoposition_immigration,3), data=train)
nm1_imm_con_qd <- multinom(f.vote~ poly(egoposition_immigration,4), data=train)
nm1_imm_cat <- multinom(f.vote~ f.egoposition_immigration, data=train)
nm1_imm_cat_new <- multinom(f.vote~ f.Imm, data=train)
nm0$dev - nm1_imm_con$dev
nm0$dev - nm1_imm_con_sq$dev
nm0$dev - nm1_imm_con_cb$dev
nm0$dev - nm1_imm_con_qd$dev
nm0$dev - nm1_imm_cat$dev
nm0$dev - nm1_imm_cat_new$dev
Anova(nm1_imm_con, test="Chisq")
Anova(nm1_imm_con_sq, test="Chisq")
Anova(nm1_imm_con_cb, test="Chisq")
Anova(nm1_imm_con_qd, test="Chisq")
Anova(nm1_imm_cat, test="Chisq")
Anova(nm1_imm_cat_new, test="Chisq")
plot(allEffects(nm1_imm_cat_new),ask=FALSE, main="Effects Imm Categorical")
AIC(nm0, nm1_imm_con, nm1_imm_con_sq, nm1_imm_con_cb, nm1_imm_con_qd, nm1_imm_cat, nm1_imm_cat_new)
nm1_polint_con <- multinom(f.vote~ political_interest, data=train)
nm1_polint_con_sq <- multinom(f.vote~ poly(political_interest,2), data=train)
nm1_polint_con_cb <- multinom(f.vote~ poly(political_interest,3), data=train)
nm1_polint_con_qd <- multinom(f.vote~ poly(political_interest,4), data=train)
nm1_polint_cat <- multinom(f.vote~ f.political_interest, data=train)
nm1_polint_cat_new <- multinom(f.vote~ f.PolInt, data=train)
nm0$dev - nm1_polint_cat_new$dev
nm0$dev - nm1_polint_con$dev
nm0$dev - nm1_polint_con_sq$dev
nm0$dev - nm1_polint_con_cb$dev
nm0$dev - nm1_polint_con_qd$dev
nm0$dev - nm1_polint_cat$dev
nm0$dev - nm1_polint_cat_new$dev
Anova(nm1_polint_cat_new, test="Chisq")
Anova(nm1_polint_cat, test="Chisq")
Anova(nm1_polint_con_qd, test="Chisq")
Anova(nm1_polint_con_cb, test="Chisq")
Anova(nm1_polint_con_sq, test="Chisq")
plot(allEffects(nm1_polint_cat_new),ask=FALSE, main="Effects Pol Int Categorical")
AIC(nm0, nm1_polint_con, nm1_polint_con_sq, nm1_polint_con_cb, nm1_polint_con_qd, nm1_polint_cat, nm1_polint_cat_new)
# nm1_imm_con_cb is better concerning AIC but we lose 5 df that compared to new factor. New factor will be used finally.
step(nm1_imm_cat_new)
nm1_inc_cat_new <- multinom(f.vote~ f.IncSat, data=train)
nm1_inc_con <- multinom(f.vote~ income, data=train)
nm1_inc_con_sq <- multinom(f.vote~ poly(income,2), data=train)
nm1_inc_con_cb <- multinom(f.vote~ poly(income,3), data=train)
nm1_inc_con_qd <- multinom(f.vote~ poly(income,4), data=train)
nm1_inc_cat <- multinom(f.vote~ f.income, data=train)
nm1_inc_cat_new <- multinom(f.vote~ f.IncSat, data=train)
nm0$dev - nm1_inc_con$dev
nm0$dev - nm1_inc_con_sq$dev
nm0$dev - nm1_inc_con_cb$dev
nm0$dev - nm1_inc_con_qd$dev
nm0$dev - nm1_inc_cat$dev
nm0$dev - nm1_inc_cat_new$dev
Anova(nm1_inc_cat_new, test="Chisq")
Anova(nm1_inc_cat, test="Chisq")
plot(allEffects(nm1_inc_cat_new),ask=FALSE, main="Effects Inc Sat Categorical")
AIC(nm0, nm1_inc_con, nm1_inc_con_sq, nm1_inc_con_cb, nm1_inc_con_qd, nm1_inc_cat, nm1_imm_cat_new)
# nm1_imm_cat_new is better, income satisfaction will be used as the new factor generated
step(nm1_imm_cat_new)
nm1 <-multinom(f.vote~
scale(poly(political_interest,2), scale = FALSE)*
f.Imm*
f.IncSat*
f.eastGermany*
f.gender
,data= test)
nm1 <-multinom(f.vote~
scale(poly(political_interest,2), scale = FALSE)*
(f.Imm +
f.IncSat +
f.eastGermany +
f.gender)
,data= test)
summary(nm1)
nm1_step <- step(nm1)
summary(nm1_step)
nm2 <-multinom(f.vote~
f.Imm*
(scale(poly(political_interest,2), scale = FALSE)+
f.IncSat +
f.eastGermany +
f.gender)
,data= test)
summary(nm2)
summary(nm2)
nm2_step <- step(nm2)
summary(nm2_step)
nm2 <-multinom(f.vote~
f.IncSat*
(scale(poly(political_interest,2), scale = FALSE)+
f.Imm +
f.eastGermany +
f.gender)
,data= test)
summary(nm2)
nm2_step <- step(nm2)
summary(nm2_step)
nm2 <-multinom(f.vote~
f.eastGermany*
(scale(poly(political_interest,2), scale = FALSE)+
f.Imm +
f.IncSat +
f.gender)
,data= test)
summary(nm2)
nm2_step <- step(nm2)
summary(nm2_step)
summary(nm1_step)
summary(nm2)
summary(nm1_step)
tt<-table(predict(nm1_step),test$f.vote);tt #Check that the model is not predicting part times
table(test$f.vote)
100*sum(diag(tt))/sum(tt)
predict(nm1_step)
table(test$f.vote)
tt<-table(predict(nm1_step),test$f.vote);tt #Check that the model is not predicting part times
nm2 <-multinom(f.vote~
scale(poly(political_interest,2), scale = FALSE) +
f.Imm +
f.IncSat +
f.eastGermany +
f.gender
,data= test)
table(test$f.vote)
tt<-table(predict(nm2),test$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
nm <- multinom(f.vote~ 1,data= test)
table(test$f.vote)
tt<-table(predict(nm),test$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
AIC(nm0, nm1, nm2)
table(train$f.vote)# AfD is baseline
nm0 <-multinom(f.vote~1, data=train) # Null model
AIC(nm0, nm1, nm2)
nm1 <-multinom(f.vote~
scale(poly(political_interest,2), scale = FALSE)*
(f.Imm +
f.IncSat +
f.eastGermany +
f.gender)
,data= train)
summary(nm1)
nm1_step <- step(nm1)
summary(nm1_step)
nm2 <-multinom(f.vote~
scale(poly(political_interest,2), scale = FALSE) +
f.Imm +
f.IncSat +
f.eastGermany +
f.gender
,data= train)
AIC(nm0, nm1, nm2)
table(test$f.vote)
x<-step(nm2)
summary(x)
AIC(nm0, nm1, nm2)
tt<-table(predict(nm),test$f.vote);tt #Check that the model is not predicting part times
tt<-table(predict(nm1),test$f.vote);tt #Check that the model is not predicting part times
tt<-table(predict(nm1),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
tt<-table(predict(nm2),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
AIC(nm0, nm1, nm2)
nm12 <-multinom(f.vote~
political_interest*
(f.Imm +
f.IncSat +
f.eastGermany +
f.gender)
,data= train)
x<-step(nm12)
AIC(nm0, nm1, nm2,x)
tt<-table(predict(x),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
tt<-table(predict(x),train$f.vote);tt #Check that the model is not predicting part times
tt<-table(predict(nm1_step),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
nm1 <-multinom(f.vote~
scale(poly(political_interest,2), scale = FALSE)*
(f.Imm +
f.IncSat +
f.eastGermany +
f.gender)
,data= train)
summary(nm1)
nm1_step <- step(nm1)
summary(nm1_step)
tt<-table(predict(nm1_step),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
nm2 <-multinom(f.vote~
political_interest*
(f.Imm +
f.IncSat +
f.eastGermany +
f.gender)
,data= train)
nm2_step <- step(nm2)
summary(nm2_step)
AIC(nm1_step,nm2_step)
nm3 <-multinom(f.vote~
f.Imm*
(scale(poly(political_interest,2), scale = FALSE) +
f.IncSat +
f.eastGermany +
f.gender)
,data= train)
nm3_step <- step(nm3)
summary(nm3_step)
AIC(nm1_step,nm3_step)
tt<-table(predict(nm1_step),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
tt<-table(predict(nm3_step),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
nm3 <-multinom(f.vote~
f.IncSat*
(scale(poly(political_interest,2), scale = FALSE) +
f.Imm +
f.eastGermany +
f.gender)
,data= train)
summary(nm3)
nm3_step <- step(nm3)
summary(nm3_step)
AIC(nm1_step,nm3_step)
tt<-table(predict(nm3_step),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
nm0 <-multinom(f.vote~1, data=train) # Null model
tt<-table(predict(nm0),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
nm3 <-multinom(f.vote~ .,data= train)
summary(nm3)
nm3_step <- step(nm3)
summary(nm3_step)
tt<-table(predict(nm3_step),train$f.vote);tt #Check that the model is not predicting part times
100*sum(diag(tt))/sum(tt)
part_probs <- predict(nm1_step, type="probs")
party_probs <- predict(nm1_step, type="probs")
party_probs[1:5]
AIC(nm0,nm1)
AIC(nm0,nm1_step)
sum(residuals(nm1_step,'deviance')^2)
sum(residuals(nm1_step,'pearson')^2)
marginalModelPlots(nm1_step,id=list(labels=row.names(train),method=abs(cooks.distance(nm1_step)), n=5) )
marginalModelPlots(nm1_step)
